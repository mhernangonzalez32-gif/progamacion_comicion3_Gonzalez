# Caso 1 ‚Äî Biblioteca escolar ‚Äî Pr√©stamos de libros
# Requisitos: listas paralelas, men√∫ con while, validaciones y manejo de casos borde.
# Sin diccionarios, sin clases, sin excepciones (solo controles con isdigit y l√≥gica).

titulos = []        # lista de str
ejemplares = []     # lista de int (mismo √≠ndice que 'titulos')

seguir = True
while seguir:
    print("\n--- BIBLIOTECA ESCOLAR ---")
    print("1) Ingresar lista de t√≠tulos")
    print("2) Ingresar lista de ejemplares disponibles (por t√≠tulo)")
    print("3) Mostrar cat√°logo con stock")
    print("4) Consultar disponibilidad de un t√≠tulo")
    print("5) Listar t√≠tulos agotados (0 ejemplares)")
    print("6) Agregar t√≠tulo")
    print("7) Actualizar ejemplares (PR√âSTAMO / DEVOLUCI√ìN)")
    print("0) Salir")

    op_txt = input("Eleg√≠ una opci√≥n: ").strip()
    if not op_txt.isdigit():
        print("‚ö†Ô∏è Opci√≥n inv√°lida.")
        continue
    opcion = int(op_txt)

    if opcion == 1:
        # Ingresar lista de t√≠tulos (inicializa ejemplares en 0 para cada nuevo t√≠tulo)
        cant_txt = input("¬øCu√°ntos t√≠tulos quer√©s ingresar?: ").strip()
        if not cant_txt.isdigit():
            print("‚ö†Ô∏è Ingres√° un entero v√°lido.")
            continue
        n = int(cant_txt)
        if n < 0:
            print("‚ö†Ô∏è La cantidad debe ser ‚â• 0.")
            continue

        cargados = 0
        while cargados < n:
            nombre = input(f"T√≠tulo #{cargados+1}: ").strip()
            if nombre == "":
                print("‚ö†Ô∏è El t√≠tulo no puede estar vac√≠o.")
                continue

            # evitar duplicados (case-insensitive)
            existe = False
            i = 0
            while i < len(titulos):
                if titulos[i].lower() == nombre.lower():
                    existe = True
                i += 1
            if existe:
                print("‚ö†Ô∏è Ese t√≠tulo ya existe.")
                continue

            titulos.append(nombre)
            ejemplares.append(0)  # por ahora 0; se ajusta con opci√≥n 2 o 7
            cargados += 1
            print("‚úÖ T√≠tulo agregado con ejemplares=0 (ajust√° luego en opciones 2 o 7).")

    elif opcion == 2:
        # Ingresar lista de ejemplares para cada t√≠tulo existente (sin perder sincron√≠a)
        if len(titulos) == 0:
            print("‚ö†Ô∏è No hay t√≠tulos cargados. Us√° la opci√≥n 1 o 6 primero.")
            continue

        print("\nIngres√° la cantidad para cada t√≠tulo (entero ‚â• 0).")
        i = 0
        while i < len(titulos):
            ej_txt = input(f"'{titulos[i]}' ejemplares: ").strip()
            if not ej_txt.isdigit():
                print("‚ö†Ô∏è Entero inv√°lido. Se mantiene el valor anterior.")
            else:
                cant = int(ej_txt)
                if cant < 0:
                    print("‚ö†Ô∏è Debe ser ‚â• 0. Se mantiene el valor anterior.")
                else:
                    # Si la lista ejemplares tuviera menos items, los completamos
                    if i >= len(ejemplares):
                        ejemplares.append(cant)
                    else:
                        ejemplares[i] = cant
            i += 1
        # Si por alguna raz√≥n ejemplares qued√≥ m√°s largo, recortamos
        while len(ejemplares) > len(titulos):
            ejemplares.pop()
        print("‚úÖ Actualizaci√≥n de ejemplares finalizada.")

    elif opcion == 3:
        # Mostrar cat√°logo con stock
        if len(titulos) == 0:
            print("No hay libros cargados.")
        else:
            print("\n--- CAT√ÅLOGO ---")
            i = 0
            while i < len(titulos):
                print(f"{titulos[i]}: {ejemplares[i]} copias")
                i += 1

    elif opcion == 4:
        # Consultar disponibilidad de un t√≠tulo
        buscado = input("T√≠tulo a consultar: ").strip()
        idx = -1
        i = 0
        while i < len(titulos):
            if titulos[i].lower() == buscado.lower():
                idx = i
            i += 1

        if idx == -1:
            print("‚ö†Ô∏è T√≠tulo no encontrado.")
        else:
            print(f"Disponibles de '{titulos[idx]}': {ejemplares[idx]} copias")

    elif opcion == 5:
        # Listar t√≠tulos agotados
        print("\n--- T√çTULOS AGOTADOS (0) ---")
        hay = False
        i = 0
        while i < len(titulos):
            if ejemplares[i] == 0:
                print(f"- {titulos[i]}")
                hay = True
            i += 1
        if not hay:
            print("No hay t√≠tulos agotados.")

    elif opcion == 6:
        # Agregar un solo t√≠tulo con cantidad inicial
        nombre = input("T√≠tulo nuevo: ").strip()
        if nombre == "":
            print("‚ö†Ô∏è El t√≠tulo no puede estar vac√≠o.")
            continue

        existe = False
        i = 0
        while i < len(titulos):
            if titulos[i].lower() == nombre.lower():
                existe = True
            i += 1
        if existe:
            print("‚ö†Ô∏è Ese t√≠tulo ya existe.")
            continue

        ej_txt = input("Cantidad inicial de ejemplares (entero ‚â• 0): ").strip()
        if not ej_txt.isdigit():
            print("‚ö†Ô∏è Ingres√° un entero v√°lido.")
            continue
        cant = int(ej_txt)
        if cant < 0:
            print("‚ö†Ô∏è Debe ser ‚â• 0.")
            continue

        titulos.append(nombre)
        ejemplares.append(cant)
        print("‚úÖ T√≠tulo agregado al cat√°logo.")

    elif opcion == 7:
        # Actualizar ejemplares (pr√©stamo o devoluci√≥n)
        nombre = input("T√≠tulo a actualizar: ").strip()
        idx = -1
        i = 0
        while i < len(titulos):
            if titulos[i].lower() == nombre.lower():
                idx = i
            i += 1

        if idx == -1:
            print("‚ö†Ô∏è T√≠tulo no encontrado.")
            continue

        print("\n1) PR√âSTAMO (resta)")
        print("2) DEVOLUCI√ìN (suma)")
        tipo_txt = input("Eleg√≠ 1 o 2: ").strip()
        if not tipo_txt.isdigit():
            print("‚ö†Ô∏è Opci√≥n inv√°lida.")
            continue
        tipo = int(tipo_txt)

        cant_txt = input("Cantidad (entero ‚â• 1): ").strip()
        if not cant_txt.isdigit():
            print("‚ö†Ô∏è Entero inv√°lido.")
            continue
        cant = int(cant_txt)
        if cant < 1:
            print("‚ö†Ô∏è Debe ser ‚â• 1.")
            continue

        if tipo == 1:
            # pr√©stamo: no puede superar stock
            if cant > ejemplares[idx]:
                print("‚ö†Ô∏è No hay suficientes ejemplares disponibles para prestar.")
            else:
                ejemplares[idx] = ejemplares[idx] - cant
                print("‚úÖ Pr√©stamo registrado.")
        elif tipo == 2:
            ejemplares[idx] = ejemplares[idx] + cant
            print("‚úÖ Devoluci√≥n registrada.")
        else:
            print("‚ö†Ô∏è Opci√≥n inv√°lida.")

    elif opcion == 0:
        seguir = False
        print("¬°Chau! üëã")
    else:
        print("‚ö†Ô∏è Opci√≥n inv√°lida.")

